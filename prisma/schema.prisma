// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/prisma/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Run {
  id             String   @id @default(cuid())
  userId         String
  installationId Int
  prompt         String
  branch         String
  issueNumber    Int
  repoUrl        String
  output         String?
  containerId    String?
  error          String?
  image          String   @default("ghcr.io/antho1404/anthony.run:latest")
  createdAt      DateTime @default(now())
  user           User?    @relation(fields: [userId], references: [id])
}

model User {
  id                String         @id
  email             String         @unique
  stripeCustomerId  String?        @unique
  subscription      Subscription?
  runs              Run[]
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model Subscription {
  id                String         @id @default(cuid())
  userId            String         @unique
  stripeSubscriptionId String      @unique
  status            SubscriptionStatus
  plan              SubscriptionPlan
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean       @default(false)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  user              User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum SubscriptionStatus {
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
  PAUSED
}

enum SubscriptionPlan {
  FREE
  PRO
  ENTERPRISE
}
